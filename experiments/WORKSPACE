workspace(name = "eflect_experiments")

new_local_repository(
      name = "async-profiler",
      path = "../third_party/async-profiler",
      build_file_content = """
load("@rules_java//java:defs.bzl", "java_import")

filegroup(
  name = "lib-async-profiler",
  srcs = ["build/libasyncProfiler.so"],
  visibility = ["//visibility:public"],
)

java_import(
  name = "async-profiler",
  visibility = ["//visibility:public"],
  jars = [
    "build/async-profiler.jar"
  ],
)
"""
)

local_repository(
  name = "eflect",
  path = "..",
)
load("@eflect//:eflect_deps.bzl", "eflect_deps")
eflect_deps()

# experiment deps
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "dacapo",
    urls = ["https://clerk-deps.s3.amazonaws.com/dacapo.zip"],
)

new_local_repository(
    name = "tensorflow",
    path = "./third_party/tensorflow/bazel-bin/tensorflow/java",
    build_file_content = """
load("@rules_java//java:defs.bzl", "java_import")

filegroup(
  name = "lib-tensorflow",
  srcs = ["libtensorflow_jni.so"],
  visibility = ["//visibility:public"],
)

java_import(
  name = "tensorflow",
  visibility = ["//visibility:public"],
  jars = [
    "libtensorflow.jar"
  ],
)
"""
)
